// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkyReserves.DAL;

#nullable disable

namespace SkyReserves.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SkyReserves.Models.Accesibilidad2", b =>
                {
                    b.Property<int>("AccesibilidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccesibilidadId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccesibilidadId");

                    b.ToTable("Accesibilidad2");
                });

            modelBuilder.Entity("SkyReserves.Models.Asiento2", b =>
                {
                    b.Property<int>("AsientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoId"));

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Fila")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Letra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AsientoId");

                    b.ToTable("Asientos2");

                    b.HasData(
                        new
                        {
                            AsientoId = 1,
                            Existencia = 1,
                            Fila = "1",
                            Letra = "A"
                        },
                        new
                        {
                            AsientoId = 2,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "B"
                        },
                        new
                        {
                            AsientoId = 3,
                            Existencia = 1,
                            Fila = "1",
                            Letra = "C"
                        },
                        new
                        {
                            AsientoId = 4,
                            Existencia = 1,
                            Fila = "1",
                            Letra = "D"
                        },
                        new
                        {
                            AsientoId = 5,
                            Existencia = 1,
                            Fila = "1",
                            Letra = "E"
                        },
                        new
                        {
                            AsientoId = 6,
                            Existencia = 1,
                            Fila = "1",
                            Letra = "F"
                        },
                        new
                        {
                            AsientoId = 7,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "A"
                        },
                        new
                        {
                            AsientoId = 8,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "B"
                        },
                        new
                        {
                            AsientoId = 9,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "C"
                        },
                        new
                        {
                            AsientoId = 10,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "D"
                        },
                        new
                        {
                            AsientoId = 11,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "E"
                        },
                        new
                        {
                            AsientoId = 12,
                            Existencia = 1,
                            Fila = "2",
                            Letra = "F"
                        },
                        new
                        {
                            AsientoId = 13,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "A"
                        },
                        new
                        {
                            AsientoId = 14,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "B"
                        },
                        new
                        {
                            AsientoId = 15,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "C"
                        },
                        new
                        {
                            AsientoId = 16,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "D"
                        },
                        new
                        {
                            AsientoId = 17,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "E"
                        },
                        new
                        {
                            AsientoId = 18,
                            Existencia = 1,
                            Fila = "3",
                            Letra = "F"
                        });
                });

            modelBuilder.Entity("SkyReserves.Models.AsientoDetalle", b =>
                {
                    b.Property<int>("AsientoDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsientoDetalleID"));

                    b.Property<int>("AsientoId")
                        .HasColumnType("int");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<string>("Fila")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Letra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("AsientoDetalleID");

                    b.HasIndex("AsientoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("AsientoDetalles1");
                });

            modelBuilder.Entity("SkyReserves.Models.ClaseVuelo2", b =>
                {
                    b.Property<int>("ClaseVueloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseVueloId"));

                    b.Property<string>("descripcionClase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaseVueloId");

                    b.ToTable("ClaseVuelo2");

                    b.HasData(
                        new
                        {
                            ClaseVueloId = 1,
                            descripcionClase = "Economy Class"
                        },
                        new
                        {
                            ClaseVueloId = 2,
                            descripcionClase = "Bussiness Class"
                        },
                        new
                        {
                            ClaseVueloId = 3,
                            descripcionClase = "Tourist Class"
                        },
                        new
                        {
                            ClaseVueloId = 4,
                            descripcionClase = "Firts Class"
                        },
                        new
                        {
                            ClaseVueloId = 5,
                            descripcionClase = "Smart Class"
                        });
                });

            modelBuilder.Entity("SkyReserves.Models.ClaseVueloDetalle", b =>
                {
                    b.Property<int>("ClaseVueloDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseVueloDetalleId"));

                    b.Property<int>("ClaseVueloId")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionClase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("ClaseVueloDetalleId");

                    b.HasIndex("ClaseVueloId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ClaseVueloDetalle");
                });

            modelBuilder.Entity("SkyReserves.Models.Cliente2", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<int>("AccesibilidadId")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("AccesibilidadId");

                    b.ToTable("Cliente2");
                });

            modelBuilder.Entity("SkyReserves.Models.Destino2", b =>
                {
                    b.Property<int>("DestinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DestinoId"));

                    b.Property<string>("destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DestinoId");

                    b.ToTable("Destino2", (string)null);
                });

            modelBuilder.Entity("SkyReserves.Models.Hora2", b =>
                {
                    b.Property<int>("HoraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoraID"));

                    b.Property<double>("horaViaje")
                        .HasColumnType("float");

                    b.HasKey("HoraID");

                    b.ToTable("Hora2");
                });

            modelBuilder.Entity("SkyReserves.Models.Nacionalidad1", b =>
                {
                    b.Property<int>("NacionalidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NacionalidadId"));

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NacionalidadId");

                    b.ToTable("Nacionalida1");
                });

            modelBuilder.Entity("SkyReserves.Models.Origen2", b =>
                {
                    b.Property<int>("OrigenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrigenId"));

                    b.Property<string>("origen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrigenId");

                    b.ToTable("Origen2");
                });

            modelBuilder.Entity("SkyReserves.Models.Pago2", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("PagoId");

                    b.ToTable("Pago2");
                });

            modelBuilder.Entity("SkyReserves.Models.Pasaporte2", b =>
                {
                    b.Property<int>("PasaporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasaporteId"));

                    b.Property<string>("CiudadNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmitidoPor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroPasaporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PasaporteId");

                    b.ToTable("Pasaportes2");
                });

            modelBuilder.Entity("SkyReserves.Models.PasaporteDetalle2", b =>
                {
                    b.Property<int>("PasaporteId")
                        .HasColumnType("int");

                    b.HasKey("PasaporteId");

                    b.ToTable("PasaportesDetalle");
                });

            modelBuilder.Entity("SkyReserves.Models.Reserva2", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int?>("Destino2DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int?>("Origen2OrigenId")
                        .HasColumnType("int");

                    b.Property<int>("OrigenId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("Destino2DestinoId");

                    b.HasIndex("Origen2OrigenId");

                    b.ToTable("Reserva2");
                });

            modelBuilder.Entity("SkyReserves.Models.UserAccount2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAccount2");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Arajet",
                            Role = "Admin",
                            UserName = "Araject@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Password = "Cliente",
                            Role = "User",
                            UserName = "Cliente@gmail.com"
                        });
                });

            modelBuilder.Entity("SkyReserves.Models.Vuelo2", b =>
                {
                    b.Property<int>("VueloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VueloID"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPasajeros")
                        .HasColumnType("int");

                    b.Property<int>("OrigenId")
                        .HasColumnType("int");

                    b.HasKey("VueloID");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigenId");

                    b.ToTable("Vuelo2", (string)null);
                });

            modelBuilder.Entity("SkyReserves.Models.VuelosEspeciales2", b =>
                {
                    b.Property<int>("VuelosEspecialesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VuelosEspecialesId"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIda")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrigenId")
                        .HasColumnType("int");

                    b.HasKey("VuelosEspecialesId");

                    b.HasIndex("DestinoId");

                    b.HasIndex("OrigenId");

                    b.ToTable("VuelosEspeciales2");
                });

            modelBuilder.Entity("SkyReserves.Models.AsientoDetalle", b =>
                {
                    b.HasOne("SkyReserves.Models.Asiento2", "Asiento")
                        .WithMany()
                        .HasForeignKey("AsientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkyReserves.Models.Reserva2", "Reserva")
                        .WithMany("AsientoDetalle")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asiento");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("SkyReserves.Models.ClaseVueloDetalle", b =>
                {
                    b.HasOne("SkyReserves.Models.ClaseVuelo2", "ClaseVuelo")
                        .WithMany()
                        .HasForeignKey("ClaseVueloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkyReserves.Models.Reserva2", "Reserva")
                        .WithMany("ClaseVueloDetalle")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaseVuelo");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("SkyReserves.Models.Cliente2", b =>
                {
                    b.HasOne("SkyReserves.Models.Accesibilidad2", "Accesibilidad")
                        .WithMany()
                        .HasForeignKey("AccesibilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accesibilidad");
                });

            modelBuilder.Entity("SkyReserves.Models.PasaporteDetalle2", b =>
                {
                    b.HasOne("SkyReserves.Models.Pasaporte2", "Pasaporte")
                        .WithMany("PasaporteDetalle")
                        .HasForeignKey("PasaporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pasaporte");
                });

            modelBuilder.Entity("SkyReserves.Models.Reserva2", b =>
                {
                    b.HasOne("SkyReserves.Models.Destino2", null)
                        .WithMany("Reservas")
                        .HasForeignKey("Destino2DestinoId");

                    b.HasOne("SkyReserves.Models.Origen2", null)
                        .WithMany("Reservas")
                        .HasForeignKey("Origen2OrigenId");
                });

            modelBuilder.Entity("SkyReserves.Models.Vuelo2", b =>
                {
                    b.HasOne("SkyReserves.Models.Destino2", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkyReserves.Models.Origen2", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Origen");
                });

            modelBuilder.Entity("SkyReserves.Models.VuelosEspeciales2", b =>
                {
                    b.HasOne("SkyReserves.Models.Destino2", "Destino")
                        .WithMany()
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SkyReserves.Models.Origen2", "Origen")
                        .WithMany()
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Origen");
                });

            modelBuilder.Entity("SkyReserves.Models.Destino2", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SkyReserves.Models.Origen2", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("SkyReserves.Models.Pasaporte2", b =>
                {
                    b.Navigation("PasaporteDetalle");
                });

            modelBuilder.Entity("SkyReserves.Models.Reserva2", b =>
                {
                    b.Navigation("AsientoDetalle");

                    b.Navigation("ClaseVueloDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
