@page "/Ticket/Index"
@rendermode InteractiveServer
@inject ReservaService reservaService
@inject VueloService vueloService
@inject OrigenService origenService
@inject DestinoService destinoService
@inject AsientoDetalleService asientoDetalleService
<link rel="stylesheet" href="/Style/Ticket.css" />

<PageTitle>Reserva Vuelo</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            <h3><strong>Detalles de la reserva creada</strong></h3>
        </div>
        <div class="card-body">
            <div class="mb-1">
                <p><strong>Reserva ID:</strong> @Reserva?.ReservaId</p>
            </div>
            <div class="mb-1">
                <p><strong>Origen:</strong> @Origen?.origen</p>
            </div>
            <div class="mb-1">
                <p><strong>Destino:</strong> @Destino?.destino</p>
            </div>
            <div class="mb-1">
                <p><strong>Número de pasajeros:</strong> @vuelo2?.NumeroPasajeros</p>
            </div>
        </div>

        <div class="bordered bordered-success pt-3 mt-3">
            <table class="table table-light table-bordered">
                <thead class="table table-striped text-center">
                    <tr>
                        <th>Asiento</th>
                        <th>Clase de Vuelo</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var asientoDetalle in AsientoDetalleList)
                    {
                        <tr>
                            <td>@asientoDetalle?.Asiento?.Fila</td> <!-- Asiento nombre -->
                          
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    [Parameter] public int ReservaId { get; set; }
    public Reserva2 Reserva { get; set; } = new Reserva2();
    public List<AsientoDetalle> AsientoDetalleList { get; set; } = new List<AsientoDetalle>();
    public Origen2 Origen { get; set; } = new Origen2();
    public Destino2 Destino { get; set; } = new Destino2();
    public Vuelo2 vuelo2 { get; set; } = new Vuelo2();

   /* protected override async Task OnInitializedAsync()
    {
        // Obtener la reserva actual
        Reserva = await reservaService.Buscar(ReservaId);

        // Si la reserva tiene un VueloId o algo similar
        if (Reserva != null && Reserva.VueloId != 0) // Asegúrate de que exista el vuelo
        {
            var vuelo = await vueloService.Buscar(Reserva.VueloId); // Obtener el vuelo relacionado
            Origen = vuelo?.Origen;  // Obtener el origen del vuelo
            Destino = vuelo?.Destino;  // Obtener el destino del vuelo
        }

        // Obtener los detalles de los asientos de la reserva
        AsientoDetalleList = await asientoDetalleService.ListarAsientoDetalle(ReservaId);

        // Obtener detalles adicionales de la reserva (si es necesario)
        reservaList = await reservaService.ListarDetalles(ReservaId);
    }*/

}
