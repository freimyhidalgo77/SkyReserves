@page "/Destino/Create"
@rendermode InteractiveServer
@inject DestinoService destinoService
@inject NavigationManager navigation
@inject ToastService Toast
<link rel="stylesheet" href="/Style/Destino/DestinoCreate.css" />

<PageTitle>Crear vuelo de Destino</PageTitle>
<EditForm Model="Destino" OnValidSubmit="Crear" FormName="crearDestinoForm">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h1><strong>Crear destino de Vuelo</strong></h1>
            </div>
            <div class="card-body">
                <label class="form-label" for="DestinoId"><strong>Destino ID:</strong></label>
                <InputNumber id="DestinoId" class="form-control" @bind-Value="Destino.DestinoId" readonly />

                <label class="form-label" for="Fecha"><strong>Destino del Vuelo</strong></label>
                <InputText id="Fecha" class="form-control" @bind-Value="Destino.destino" />
                <ValidationMessage For="@(() => Destino.destino)" />
            </div>

            <div class="card-footer">
                <button type="button" class="btn btn-info text-white bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
                <button type="submit" class="btn btn-success text-white bi bi-floppy-fill"> Crear</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Destino Destino { get; set; } = new Destino();
    public List<Destino> destinoLits { get; set; } = new List<Destino>();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        destinoLits = await destinoService.Listar(d => d.DestinoId > 0);
    }

    public async Task<bool> Validar()
    {
        var destinoExiste = await destinoService.BuscarDestino(Destino.destino);
        if (destinoExiste != null)
        {
            Toast.Notify(new (ToastType.Warning, "Error al guardar el vuelo!", "El destino de vuelo ya existe!"));
            return false; 
        }

        return true; 
    }


    public async Task Crear()
    {
        if (await Validar())
        {

            Toast.Notify(new(ToastType.Success, "Destino de vuelo Guardado", "El destino de vuelo se ha guardado con exito!"));
            await destinoService.Guardar(Destino);
            Destino = new Destino();
            navigation.NavigateTo("/Destino/Index");
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Destino/Index");
    }
}
