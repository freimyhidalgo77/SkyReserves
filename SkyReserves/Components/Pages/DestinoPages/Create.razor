@page "/Destino/Create"
@inject DestinoService destinoService
@inject NavigationManager navigation

<PageTitle>Crear vuelo de Destino</PageTitle>

<EditForm Model="Destino" OnValidSubmit="Crear" FormName="crearDestinoForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h1><strong>Crear Vuelo</strong></h1>
            </div>
            <div class="card-body">
                <label class="form-label" for="DestinoId"><strong>Destino ID:</strong></label>
                <InputNumber id="DestinoId" class="form-control" @bind-Value="Destino.DestinoId" readonly />

                <label class="form-label" for="Fecha"><strong>Destino del Vuelo</strong></label>
                <InputText id="Fecha" class="form-control" @bind-Value="Destino.destino" />
                <ValidationMessage For="@(() => Destino.destino)" />
            </div>

            <div class="card-footer">
                <button type="button" class="btn btn-info text-white bi bi-90deg-left" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success text-white bi bi-floppy-fill">Crear</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Destino Destino { get; set; } = new Destino();
    public List<Destino> destinoLits { get; set; } = new List<Destino>();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        destinoLits = await destinoService.Listar(d => d.DestinoId > 0);
    }

    private async Task Crear()
    {
        if (string.IsNullOrWhiteSpace(Destino.destino))
        {
            Mensaje = "El destino no puede estar vacío.";
            return;
        }

        var destino = new Destino
            {
                DestinoId = Destino.DestinoId,
                destino = Destino.destino
            };

        var crear = await destinoService.Guardar(destino);

        if (crear)
        {
            Mensaje = "Destino creado correctamente.";
            Destino = new Destino();  // Limpiar el formulario
            navigation.NavigateTo("/Destino/Index");
        }
        else
        {
            Mensaje = "No se ha creado correctamente el destino.";
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/D/Index");
    }
}
