<div class="col-auto input-group align-items-center">
    <InputSelect class="form-select" @bind-Value="AsientoId">
        <option disabled value="0">Seleccionar asiento</option>
        @foreach (var asiento in AsientoList)
        {
            <option value="@asiento.AsientoId">
                -- @asiento.Existencia ----- @asiento.Fila @asiento.Letra
            </option>
        }
    </InputSelect>
</div>

@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="alert alert-danger">@mensaje</div>
}

@code {
    [Parameter]
    public List<AsientoDetalle> AsientoList { get; set; } = new List<AsientoDetalle>(); // Lista de asientos disponibles

    [Parameter]
    public int AsientoId { get; set; } // AsientoId enlazado al InputSelect

    [Parameter]
    public EventCallback<AsientoDetalle> AsientoSeleccionado { get; set; } // Callback para el asiento seleccionado

    public string mensaje { get; set; } = string.Empty;

    private async Task ElegirAsiento()
    {
        if (AsientoId > 0)
        {
            var asientoElegido = AsientoList.SingleOrDefault(a => a.AsientoId == AsientoId);
            if (asientoElegido != null)
            {
                // Invoca el callback para pasar el asiento seleccionado
                await AsientoSeleccionado.InvokeAsync(asientoElegido);
            }
            else
            {
                mensaje = "Debe seleccionar un asiento.";
            }
        }
        else
        {
            mensaje = "Por favor, seleccione un asiento.";
        }
    }
}
