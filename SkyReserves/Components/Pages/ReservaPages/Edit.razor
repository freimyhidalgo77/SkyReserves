@page "/Reserva/Edit {ReservaId:int}"
@inject ReservaService reservaService
@inject OrigenService origenService
@inject DestinoService destinoService
@inject AsientoService asientosService
@inject NavigationManager navigation


<PageTitle>Editar Reserva</PageTitle>
<EditForm Model="Reserva" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="card-image-top">
        <img src="https://images.prismic.io/arajet-ezycommerce/b93f72da-5043-4605-8682-9b60bfee38dd_Logo_web_Arajet.png"
        alt="Vista aérea"
        style="width: 100%; height: 300px; object-fit: cover;" />
    </div>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5><strong>Crear Reserva</strong></h5>
            </div>
            <div class="card-body">
                <label class="form-label" for="ReservaId"><strong>Reserva ID:</strong></label>
                <InputNumber id="ReservaId" class="form-control" @bind-Value="Reserva.ReservaId" readonly />

                <label class="form-label" for="Origen"><strong>Origen</strong></label>
                <InputSelect id="Origen" class="form-control" @bind-Value="Reserva.OrigenId">
                    @foreach (var origen in OrigenList)
                    {
                        <option value="@origen.OrigenId">@origen.origen</option>
                    }
                </InputSelect>

                <label class="form-label" for="Destino"><strong>Destino</strong></label>
                <InputSelect id="Destino" class="form-control" @bind-Value="Reserva.DestinoId">
                    @foreach (var destino in DestinoList)
                    {
                        <option value="@destino.DestinoId">@destino.destino</option>
                    }
                </InputSelect>

                <label class="form-label" for="NumeroPasajeros"><strong>Número de Pasajeros</strong></label>
                <div class="input-group">
                    <button class="btn btn-outline-secondary" type="button" @onclick="DecrementarPasajeros">-</button>
                    <InputNumber id="NumeroPasajeros" class="form-control" @bind-Value="Reserva.NumeroPasajeros" min="1" />
                    <button class="btn btn-outline-secondary" type="button" @onclick="IncrementarPasajeros">+</button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5><strong>Seleccionar Asientos</strong></h5>
            </div>
            <div class="card-body">
                <SeleccionarAsientoPicker ListaAsientos="AsientoList"
                AsientoSeleccionado="AgregarAsiento" />

                <hr />

                <table class="table table-light">
                    <thead class="table table-stripped">
                        <tr class="text-center">
                            <th>Asiento ID</th>
                            <th>Fila</th>
                            <th>Letra</th>
                            <th>Disponibilidad</th>
                            <th>Remover</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var asiento in AsientosSeleccionados)
                        {
                            <tr class="text-center">
                                <td class="ps-3">@asiento.AsientoId</td>
                                <td class="ps-3">@asiento.Fila</td>
                                <td class="ps-3">@asiento.Letra</td>
                                <td class="ps-3">@asiento.Existencia</td>
                                <td class="ps-3">
                                    <button type="button" class="btn btn-outline-danger bi bi-trash" @onclick="() => RemoverAsiento(asiento)">
                                        Remover
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="card-footer text-center">
            <button type="button" class="btn btn-danger bi bi-arrow-90deg-left" @onclick="Volver"> Volver</button>
            <button type="submit" class="btn btn-success bi bi-floppy-fill"> Guardar Reserva</button>
        </div>
    </div>
</EditForm>




@code {

    [Parameter]
    public int ReservaId { get; set; }
    public Reserva Reserva { get; set; } = new Reserva();
    public List<Origen> OrigenList { get; set; } = new List<Origen>();
    public List<Destino> DestinoList { get; set; } = new List<Destino>();
    public List<Asiento> AsientoList { get; set; } = new List<Asiento>();
    public List<Asiento> AsientosSeleccionados { get; set; } = new List<Asiento>();

    protected override async Task OnInitializedAsync()
    {
        Reserva = await reservaService.Buscar(ReservaId);
      
    }

    private void IncrementarPasajeros()
    {
        Reserva.NumeroPasajeros++;
    }

    private void DecrementarPasajeros()
    {
        if (Reserva.NumeroPasajeros > 1)
        {
            Reserva.NumeroPasajeros--;
        }
    }

    private void AgregarAsiento(int asientoId)
    {
        var asiento = AsientoList.SingleOrDefault(a => a.AsientoId == asientoId);
        if (asiento != null && !AsientosSeleccionados.Contains(asiento))
        {
            AsientosSeleccionados.Add(asiento);
        }
    }

    private void RemoverAsiento(Asiento asiento)
    {
        AsientosSeleccionados.Remove(asiento);
    }

    private async Task Modificar()
    {
        if (!AsientosSeleccionados.Any())
        {
            // Agregar validación si no se han seleccionado asientos
            return;
        }

        // Crear la reserva solo con los detalles básicos
        var reservaGuardada = await reservaService.Guardar(Reserva);

        if (reservaGuardada)
        {
            navigation.NavigateTo("/Reserva/Index");
        }
    }

    private void Volver()
    {
        navigation.NavigateTo("/Reserva/Index");
    }



}
