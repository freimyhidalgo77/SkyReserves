@page "/MenuPrincipal"
@page "/MenuPrincipal/{ReservaID:int}"
@using System.Globalization
@using SkyReserves.Models
@inject OrigenService origenService
@inject DestinoService destinoService
@inject NavigationManager Navigation
<link rel="stylesheet" href="/Estilos/Cierre.css" />

<PageTitle>Menú Principal</PageTitle>

<AuthorizeView Roles="Admin,User">
    <div class="container mt-4">
        <div class="header-buttons d-flex justify-content-lg-end align-items-center">
            <!-- Botón Volver -->
            <a href="/AdminDashboard" class="common-btn bi bi-arrow-90deg-left text-nowrap me-3">
                Volver
            </a>

            <!-- Botón Cerrar Sesión -->
            <a href="/logout" class="common-btn text-nowrap">
                Cerrar sesión
            </a>
        </div>
    </div>

    <div class="row">
        @foreach (var flight in GetFilteredFlightDeals())
        {
            <div class="col-md-3 mb-4">
                <div class="card h-100">
                    <img src="@flight.ImageUrl" class="card-img-top flight-img" alt="Flight Image">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@flight.Origin to @flight.Destination</h5>
                        <p class="card-text">
                            @flight.StartDate.ToString("dd/MM/yyyy") - @flight.EndDate.ToString("dd/MM/yyyy")<br />
                            From <strong>@flight.Price.ToString("C", CultureInfo.GetCultureInfo("en-US"))</strong><br />
                            Seen: @flight.SeenDuration ago<br />
                            @flight.TripType / @flight.Class
                        </p>

                        <!-- InputSelect para seleccionar origen -->
                        <label class="form-label" for="Origen"><strong>Origen</strong></label>
                        <InputSelect id="Origen" class="form-control" @bind-Value="Reserva.OrigenId">
                            <option value="0" disabled selected>Seleccione un origen de vuelo</option>
                            @foreach (var origen in origenes)
                            {
                                <option value="@origen.OrigenId">@origen.origen</option>
                            }
                        </InputSelect>

                        <!-- InputSelect para seleccionar destino -->
                        <label class="form-label" for="Destino"><strong>Destino</strong></label>
                        <InputSelect id="Destino" class="form-control" @bind-Value="Reserva.DestinoId">
                            <option value="0" disabled selected>Seleccione un destino de vuelo</option>
                            @foreach (var destino in destinos)
                            {
                                <option value="@destino.DestinoId">@destino.destino</option>
                            }
                        </InputSelect>

                        <!-- Botón para redirigir a la página de editar reserva -->
                        <a href="/Reserva/Edit/@flight.ReservaId" class="btn btn-warning mt-auto">Book</a>
                    </div>
                </div>
            </div>
        }
    </div>
</AuthorizeView>

@code {
    [Parameter]
    public int ReservaID { get; set; }
    private List<Origen> origenes = new List<Origen>();
    private List<Destino> destinos = new List<Destino>();
    private List<ClaseVuelo> clasesVuelo = new List<ClaseVuelo>();
    private Reserva Reserva { get; set; } = new Reserva();

    protected override async Task OnInitializedAsync()
    {
        origenes = await FetchOrigenData();
        destinos = await FetchDestinoData();
    }

    // Lista de vuelos simulados
    private List<FlightDeal> flightDeals = new List<FlightDeal>
    {
        new FlightDeal
        {
            Origin = "Buenos Aires (EZE)",
            Destination = "Punta Cana (PUJ)",
            StartDate = new DateTime(2024, 12, 16),
            EndDate = new DateTime(2025, 1, 1),
            Price = 431,
            SeenDuration = "44 minutes",
            TripType = "Round-trip",
            Class = "Economy",
            ImageUrl="/Imagenes/PuntaCana.jpeg"
        },
        new FlightDeal
        {
            Origin = "Santo Domingo (SDQ)",
            Destination = "Bogota (BOG)",
            StartDate = new DateTime(2024, 12, 1),
            EndDate = new DateTime(2025, 1, 8),
            Price = 141,
            SeenDuration = "3 hours",
            TripType = "Round-trip",
            Class = "Economy",
            ImageUrl = "/Imagenes/Bogota.jpg"
        },
        new FlightDeal
        {
            Origin = "Lima Peru (LIM)",
            Destination = "Punta Cana (PUJ)",
            StartDate = new DateTime(2024, 12, 11),
            EndDate = new DateTime(2024, 12, 17),
            Price = 225,
            SeenDuration = "14 hours",
            TripType = "Round-trip",
            Class = "Economy",
            ImageUrl = "/Imagenes/Dorado-park.jpg"
        },
        new FlightDeal
        {
            Origin = "Punta Cana (PUJ)",
            Destination = "Mexico City(NLU)",
            StartDate = new DateTime(2024, 12, 10),
            EndDate = new DateTime(2025, 1, 8),
            Price = 91,
            SeenDuration = "3 hours",
            TripType = "Round-trip",
            Class = "Economy",
            ImageUrl = "/Imagenes/Mexico.jpeg"
        }
    };

    private List<FlightDeal> GetFilteredFlightDeals()
    {
        return flightDeals;
    }

    private async Task<List<Origen>> FetchOrigenData()
    {
        return new List<Origen>
        {
            new Origen { OrigenId = 1, origen = "Buenos Aires (EZE)" },
            new Origen { OrigenId = 2, origen = "Santo Domingo (SDQ)" },
            new Origen { OrigenId = 3, origen = "Lima (LIM)" },
            new Origen { OrigenId = 4, origen = "Mexico City(NLU)"}
        };
    }

    private async Task<List<Destino>> FetchDestinoData()
    {
        return new List<Destino>
        {
            new Destino { DestinoId = 1, destino = "Punta Cana (PUJ)" },
            new Destino { DestinoId = 2, destino = "Bogota (BOG)" },
            new Destino { DestinoId = 3, destino = "Mexico City (NLU)" },
            new Destino {DestinoId = 4, destino = "Santo Domingo (SDQ)" }
        };
    }

    public class FlightDeal
    {
        public string Origin { get; set; }
        public string Destination { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public decimal Price { get; set; }
        public string SeenDuration { get; set; }
        public string TripType { get; set; }
        public string Class { get; set; }
        public string ImageUrl { get; set; }
        public int ReservaId { get; set; }  // Esto es necesario para hacer la redirección
    }

    public class Origen
    {
        public int OrigenId { get; set; }
        public string origen { get; set; }
    }

    public class Destino
    {
        public int DestinoId { get; set; }
        public string destino { get; set; }
    }
}
