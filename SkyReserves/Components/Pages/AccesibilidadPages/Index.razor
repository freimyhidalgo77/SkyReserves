@page "/Accesibilidad/Index"
@rendermode InteractiveServer
@inject AccesibilidadService accesibilidadService
<link rel="stylesheet" href="/Style/AccesibilidadIndex.css" />

<PageTitle>Accesibilidad</PageTitle>
<div class="container">
    <div class="card shadow">
        <div class="card-header text-center">
            <h3><strong>Accesibilidades Para Pasajeros</strong></h3>
        </div>

        <div class="row mb-3 align-items-end">
            <div class="col-md-3">
                <label for="Filtro" class="form-label"><strong>Filtrar por:</strong></label>
                <InputSelect id="filtro" class="form-select" @bind-Value="filtro">
                    <option value="" disabled>Seleccionar</option>
                    <option value="AccesibilidadId">Accesibilidad ID</option>
                    <option value="Descripcion"> Descripcion</option>
                </InputSelect>
            </div>

                <div class="col-md-6">
                    <label for="ValorFiltro" class="form-label"><strong>Búsqueda:</strong></label>
                    <div class="input-group">
                        <input @bind="ValorFiltro" class="form-control" placeholder="Buscar" />
                        <button @onclick="Buscar" class="btn btn-success" type="button">
                            <span class="bi bi-search"></span> Buscar
                        </button>
                        <a href="/Accesibilidad/Create" class="btn btn-success bi bi-plus-square"> Crear</a>
                    </div>
                </div>
            </div>

          
        <div class="table-responsive">
            <table class="table table-light table-bordered">
                <thead class="table table-striped text-center table-bordered mt-3">
                    <tr>
                        <th>Accesibilidad ID</th>
                        <th>Descripción</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @if (accesibilidadList != null && accesibilidadList.Any())
                    {
                        @foreach (var accesibilidad in accesibilidadList)
                        {
                            <tr>
                                <td class="text-center">@accesibilidad.AccesibilidadId</td>
                                <td class="text-center">@accesibilidad.Descripcion</td>
                                <td class="text-center">
                                    <a href="/Accesibilidad/Edit/@accesibilidad.AccesibilidadId" class="btn btn-outline-warning bi bi-pencil-square"></a>
                                </td>
                                <td class="text-center">
                                    <a href="/Accesibilidad/Delete/@accesibilidad.AccesibilidadId" class="btn btn-outline-danger bi bi-trash"></a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">No se encontraron resultados.</td>
                        </tr>
                    }
                </tbody>
            </table>
        <div class="card-footer">
            <p><strong>Total de Accesibilidades: </strong>@accesibilidadList?.Count</p>
            </div>
        </div>
    </div>
</div>

@code {
    Accesibilidad Accesibilidad { get; set; } = new Accesibilidad();
    List<Accesibilidad> accesibilidadList { get; set; } = new List<Accesibilidad>();
    List<Accesibilidad> accesibilidadListCompleta { get; set; } = new List<Accesibilidad>();
    public string filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        accesibilidadListCompleta = await accesibilidadService.Listar(o => o.AccesibilidadId > 0);
        accesibilidadList = accesibilidadListCompleta;
    }

    public void Buscar()
    {
        if (string.IsNullOrWhiteSpace(filtro) || string.IsNullOrWhiteSpace(ValorFiltro))
        {
            accesibilidadList = accesibilidadListCompleta; // Mostrar todo si no hay filtro o búsqueda
            return;
        }

        switch (filtro)
        {
            case "AccesibilidadId":
                if (int.TryParse(ValorFiltro, out int id))
                {
                    accesibilidadList = accesibilidadListCompleta
                        .Where(a => a.AccesibilidadId == id)
                        .ToList();
                }
                break;

            case "Descripcion":
                accesibilidadList = accesibilidadListCompleta
                    .Where(a => a.Descripcion != null && a.Descripcion.Contains(ValorFiltro, StringComparison.OrdinalIgnoreCase))
                    .ToList();
                break;

            default:
                accesibilidadList = accesibilidadListCompleta; // Mostrar todo si el filtro no es válido
                break;
        }
    }
}
