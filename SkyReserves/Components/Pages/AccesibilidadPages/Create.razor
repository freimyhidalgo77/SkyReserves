@page "/Accesibilidad/Create"
@inject AccesibilidadService accesibilidadService
@inject NavigationManager navigation
<link rel="stylesheet" href="/Style/Accesibilidad.css" />

<PageTitle>Crear Accesibilidad </PageTitle>
<EditForm Model="Accesibilidad" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h1><strong>Crear Accesibilidad</strong></h1>
            </div>
            <div class="card-body">

                <label class="form-label" for="accesibilidadId"><strong>Accesibilidad ID:</strong></label>
                <InputNumber id="AccesibilidadId" class="form-control" @bind-Value="Accesibilidad.AccesibilidadId" readonly></InputNumber>


                <label class="form-label" for="Fecha"><strong>Descripcion </strong></label>
                <InputText id="descripcion" class="form-control" @bind-Value="Accesibilidad.Descripcion"></InputText>
                <ValidationMessage For="@(() => Accesibilidad.Descripcion)" />

            </div>

            <div class="card-footer">
                <button type="button" class="btn btn-info text-whie bi bi-90deg-left" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success text-white bi bi-floppy-fill">Crear</button>
            </div>
        </div>
    </div>
</EditForm>


@code {

    public Accesibilidad Accesibilidad { get; set; } = new Accesibilidad();
    public List<Accesibilidad> accesibilidadList { get; set; } = new List<Accesibilidad>();
    public string Mensaje { get; set; } = string.Empty;
    //public List<ToastMessage> MensajeToast { get; set; } = new List<ToastMessage>();


    protected override async Task OnInitializedAsync()
    {
        var accesibilidad = await accesibilidadService.Listar(o => o.AccesibilidadId > 0);

    }


    private async Task Crear()
    {
        var accesibilidad = new Accesibilidad
            {
                AccesibilidadId = Accesibilidad.AccesibilidadId,
                Descripcion = Accesibilidad.Descripcion

            };

        var crear = await accesibilidadService.Guardar(Accesibilidad);

        if (crear)
        {
            Accesibilidad = new Accesibilidad();
            navigation.NavigateTo("/Accesibilidad/Index");
        }
        else
        {
            Mensaje = "No se ha creado correctamente la descripcion de la accesibilidad";
        }
    }


    public void Volver()
    {
        // toastService.Notify(new(ToastType.Danger, "Exito!", "Ah vuelto correctamente"));
        navigation.NavigateTo("/Accesibilidad/Index");

    }


}




